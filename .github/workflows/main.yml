name: Docker OEREB-DB CI

on:
  workflow_dispatch:
  push:
  pull_request:

defaults:
  run:
    shell: bash

jobs:

  make-docker-images:
    name: Build docker image for oereb db

    runs-on: ubuntu-20.04

    permissions:
      contents: read
      packages: write

    env:
      VERSION: 2.0.${{ github.run_number }}
      PG_VERSION: 14-3.1

    steps:
      - uses: actions/checkout@v2

      - name: Override version number for 2.0.x builds
        run: |
          echo "VERSION=2.0.$(( 100 + ${{ github.run_number }} ))" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Create sql
        run: |
          curl -Ls https://sh.jbang.dev | bash -s - create_schema_sql.java
          ls -la

      - uses: actions/upload-artifact@v4
        with:
          name: setup_gdi.sql
          path: setup_gdi.sql

      - uses: actions/upload-artifact@v4
        with:
          name: setup.sql
          path: setup.sql

      - uses: actions/upload-artifact@v4 
        with:
          name: transfer.sql
          path: transfer_*.sql

      - name: Set up QEMU for amd64 and arm64
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480  # v1.2.0 (2021-10-22)
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25  # v1.6.0 (2021-10-22)

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@3a3bb3a81753dc99f090d24ee7e5343838b73a96  # v3.5.0 (2021-10-22)
        with:
          images: |
            sogis/oereb-db
            ghcr.io/sogis/oereb-db
          labels: |
            org.opencontainers.image.title=oereb-db
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.base.name=docker.io/sogis/postgis:${{ env.PG_VERSION }}
          tags: |
            type=raw,value=${{ env.VERSION }},enable=true,priority=200
            type=raw,value=2.0,enable=true,priority=200
            type=raw,value=2,enable=true,priority=200
            type=raw,value=latest,enable=true,priority=200

      - name: Single-platform build 
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229  # v2.7.0 (2021-10-22)
        with:
          platforms: linux/amd64
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true
          pull: true

      - name: List images
        run: |
          docker images

      - name: Test docker image
        run: |
          docker compose -f docker-compose.test.yml build
          docker compose -f docker-compose.test.yml run sut

      - name: Login to Docker Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9  # v1.10.0 (2021-10-22)
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Login to Github Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9  # v1.10.0 (2021-10-22)
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      # Unschön ist das zweite Builden der Images. Multiarch push manuell ist nicht so prickelnd und
      # mir ist nicht klar, wie man das Image überhaupt exportieren könnte (also arm auf amd).
      - name: Multi-platform build and push
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229  # v2.7.0 (2021-10-22)
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          push: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
